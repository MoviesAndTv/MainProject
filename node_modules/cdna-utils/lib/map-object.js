// map object
// using for convert object with map
// prams
//  - map: map with struct 'source_property': 'dest_property'
function MapObject(map) {
   this.map = map;
}

// shortcut for map object prototype
var prototype = MapObject.prototype;

// convert
// using convert source object to dest object, no support deep object
// params
//  - source: object to convert
// return object, object convert by source object and map
prototype.convert = function(source) {
   var self = this;

   var dest = {};
   for(var sourceProperty in self.map) {
      if(!self.map.hasOwnProperty(sourceProperty)) { continue; }

      var destProperty = self.map[sourceProperty];
      dest[destProperty] = source[sourceProperty];
   }

   return dest;
}

module.exports = MapObject;
