var chai = require('chai');
var fs = require('fs');
var Log = require('log');
var YtsClient = require('../index');

var expect = chai.expect;
var log = new Log('test', fs.createWriteStream('test.log'));

// count number of moviewith quality
// params
//  - items: list of movie
//  - quality: string quality to match: 720p, 1080p, 3D
// return boolean
//  - true on all item have quality
//  - false if one or move item not have quality
function matchQuality(items, quality) {

   var ok = true;

   for(var i in items) {
      var item = items[i];
      var found = false;
      for(var j in item.torrents) {
         var torrent = item.torrents[j];
         if(torrent.quality == quality) { found = true; break; }
      }
      if(!found) { ok = false; break; }
   }

   return ok;
}

describe('#yts client', function() {

   var ytsClient = new YtsClient();

   before(function() {
   });

   it('find movie with page size', function(done) {
      // use api to get page with pageSize item
      // because yts database have about 4000 movie, it must return extractly
      // number of item equal with pageSize
      var pageSize = 8;
      ytsClient.find({pageSize: pageSize}, function(err, items) {
         expect(items.length).most(pageSize);
         done();
      });
   });


   it('find movie with quality 720p', function(done) {
      // use api to get some item with 720p quality from yts
      // use matchQuality to find each item have any torrent with 720p quality
      var quality = '720p';
      ytsClient.find({pageSize: 8, quality: quality}, function(err, items) {
         var ok = matchQuality(items, quality);
         expect(ok).equal(true);
         done();
      });
   });

   it('find movie with quality 1080p', function(done) {
      // use api to get some item with 1080p quality from yts
      // use matchQuality to find each item have any torrent with 1080p quality
      var quality = '1080p';
      ytsClient.find({pageSize: 8, quality: quality}, function(err, items) {

         var ok = matchQuality(items, quality);
         expect(ok).equal(true);
         done();
      });
   });

   it('find movie with quality 3d', function(done) {
      // use api to get some item with 3D quality from yts
      // use matchQuality to find each item have any torrent with 3D quality
      var quality = '3D';
      ytsClient.find({pageSize: 8, quality: quality}, function(err, items) {

         var ok = matchQuality(items, quality);
         expect(ok).equal(true);
         done();
      });
   });

   it('count number of movie', function(done) {
      ytsClient.size({}, function(err, size) {
         expect(size).above(0);
         done();
      });
   });

   it('get movie by id', function(done) {
      var id = 8;
      ytsClient.findById(id, function(err, item) {
         expect(item.id).equal(id);
         done();
      });
   });
});
